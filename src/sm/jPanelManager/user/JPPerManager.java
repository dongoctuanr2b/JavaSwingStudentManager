/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sm.jPanelManager.user;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import sm.mainFrame.MainFrame;

/**
 *
 * @author Ngoc Tuan
 */
public class JPPerManager extends javax.swing.JPanel {

    private JIFPerAdd jIFPerAdd;
    private JIFPerUpdate jIFPerUpdate;
    private PermissionDAO permissionDAO = new PermissionDAO();

    /**
     * Creates new form JPanelPerManager
     */
    public JPPerManager() {
        initComponents();

        setVisible(false);
        setBounds(0, 0, MainFrame.jPanelContent.getSize().width + 105, MainFrame.jPanelContent.getSize().height);

        jTablePer.setRowHeight(30);
        jTablePer.setShowGrid(true);
        jTablePer.setGridColor(new Color(102, 102, 102));

        fillData();
    }

    //fill data ra bảng
    public void fillData() {

        List<Permission> permissions = permissionDAO.getAll();

        DefaultTableModel dtm = new DefaultTableModel();

        dtm.addColumn("idPermissionDetail");
        dtm.addColumn("idPermission");
        dtm.addColumn("Permission name");
        dtm.addColumn("Action name");
        dtm.addColumn("Check action");

        for (Permission permission : permissions) {
            Vector<Object> vector = new Vector();
            vector.add(permission.getIdPermissionDetail());
            vector.add(permission.getIdPermission());
            vector.add(permission.getPermissionName());
            vector.add(permission.getActionName());
            vector.add(permission.getCheckActionString());

            dtm.addRow(vector);
        }

        jTablePer.setModel(dtm);

        jTablePer.removeColumn(JPPerManager.jTablePer.getColumnModel().getColumn(1));
        jTablePer.removeColumn(JPPerManager.jTablePer.getColumnModel().getColumn(0));
    }

    private void setData() {
        List<Permission> permissions = permissionDAO.getAll();

        if (permissions.size() > 0) {
            int index = jTablePer.getSelectedRow();
            TableModel model = jTablePer.getModel();

            if (jIFPerUpdate != null) {//tránh lỗi NULLpointerEx do chưa khởi tạo IFAddStudentForm mà đã click vào bảng
                JIFPerUpdate.jTextFieldPerN.setText(model.getValueAt(index, 2).toString());

                String jCheckBoxTextA = JIFPerUpdate.jCheckBoxAdd.getText();
                String jCheckBoxTextUpdate = JIFPerUpdate.jCheckBoxUpdate.getText();
                String jCheckBoxTextDelete = JIFPerUpdate.jCheckBoxDelete.getText();
                String jCheckBoxTextRead = JIFPerUpdate.jCheckBoxRead.getText();
                String jTableActionN = model.getValueAt(index, 3).toString();
                String jTableCheckActioin = model.getValueAt(index, 4).toString();

                JIFPerUpdate.jCheckBoxAdd.setSelected(false);
                JIFPerUpdate.jCheckBoxUpdate.setSelected(false);
                JIFPerUpdate.jCheckBoxDelete.setSelected(false);
                JIFPerUpdate.jCheckBoxRead.setSelected(false);
                if ((jCheckBoxTextA.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxAdd.setSelected(true);
                }
                if ((jCheckBoxTextUpdate.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxUpdate.setSelected(true);
                }
                if ((jCheckBoxTextDelete.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxDelete.setSelected(true);
                }
                if ((jCheckBoxTextRead.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxRead.setSelected(true);
                }
            }
        }
    }

    //get idStudent từ bảng
    private String idPermissionDetail() {
        int index = JPPerManager.jTablePer.getSelectedRow();
        TableModel model = JPPerManager.jTablePer.getModel();

        return model.getValueAt(index, 0).toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMid = new javax.swing.JPanel();
        jLabelAdd = new javax.swing.JLabel();
        jLabelDelete = new javax.swing.JLabel();
        jLabelUpdate = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jComboBoxSearch = new javax.swing.JComboBox<>();
        jLabelSearch = new javax.swing.JLabel();
        jLabelRefresh = new javax.swing.JLabel();
        jLabelBack = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePer = new javax.swing.JTable();
        jPanelTop = new javax.swing.JPanel();
        jLabelTeacher = new javax.swing.JLabel();

        jPanelMid.setBackground(new java.awt.Color(204, 204, 204));
        jPanelMid.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelMidMouseMoved(evt);
            }
        });

        jLabelAdd.setBackground(new java.awt.Color(204, 204, 204));
        jLabelAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/image/add.png"))); // NOI18N
        jLabelAdd.setText("<html><div style='text-align: right;'>&emsp;Add  </div></html> ");
        jLabelAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jLabelAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelAdd.setOpaque(true);
        jLabelAdd.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabelAddMouseMoved(evt);
            }
        });
        jLabelAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAddMouseClicked(evt);
            }
        });

        jLabelDelete.setBackground(new java.awt.Color(204, 204, 204));
        jLabelDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/image/delete1.png"))); // NOI18N
        jLabelDelete.setText("<html><div style='text-align: right;'>&emsp;Delete</div></html> ");
        jLabelDelete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jLabelDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelDelete.setOpaque(true);
        jLabelDelete.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabelDeleteMouseMoved(evt);
            }
        });
        jLabelDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelDeleteMouseClicked(evt);
            }
        });

        jLabelUpdate.setBackground(new java.awt.Color(204, 204, 204));
        jLabelUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/image/update.png"))); // NOI18N
        jLabelUpdate.setText("<html><div style='text-align: right;'>&emsp;Update</div></html> ");
        jLabelUpdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jLabelUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelUpdate.setOpaque(true);
        jLabelUpdate.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabelUpdateMouseMoved(evt);
            }
        });
        jLabelUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelUpdateMouseClicked(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldSearch.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldSearch.setText("Search...");
        jTextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusLost(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        jComboBoxSearch.setBackground(new java.awt.Color(240, 240, 240));
        jComboBoxSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Permission name", "Action name" }));
        jComboBoxSearch.setOpaque(false);
        jComboBoxSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxSearchFocusLost(evt);
            }
        });

        jLabelSearch.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabelSearch.setText("Search By:");

        jLabelRefresh.setBackground(new java.awt.Color(204, 204, 204));
        jLabelRefresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/image/refresh1.png"))); // NOI18N
        jLabelRefresh.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jLabelRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRefresh.setOpaque(true);
        jLabelRefresh.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabelRefreshMouseMoved(evt);
            }
        });
        jLabelRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRefreshMouseClicked(evt);
            }
        });

        jLabelBack.setBackground(new java.awt.Color(204, 204, 204));
        jLabelBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/image/back.png"))); // NOI18N
        jLabelBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jLabelBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBack.setOpaque(true);
        jLabelBack.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabelBackMouseMoved(evt);
            }
        });
        jLabelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelMidLayout = new javax.swing.GroupLayout(jPanelMid);
        jPanelMid.setLayout(jPanelMidLayout);
        jPanelMidLayout.setHorizontalGroup(
            jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMidLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jLabelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        jPanelMidLayout.setVerticalGroup(
            jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMidLayout.createSequentialGroup()
                .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelMidLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearch)
                    .addComponent(jComboBoxSearch)
                    .addComponent(jLabelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTablePer.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTablePer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablePer.setFillsViewportHeight(true);
        jTablePer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTablePerMouseMoved(evt);
            }
        });
        jTablePer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTablePerMouseReleased(evt);
            }
        });
        jTablePer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTablePerKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePer);

        jPanelTop.setBackground(new java.awt.Color(153, 153, 153));
        jPanelTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelTopMouseMoved(evt);
            }
        });

        jLabelTeacher.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
        jLabelTeacher.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTeacher.setText("<html><div style='text-align: right;'>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Permission manager</div></html> ");

        javax.swing.GroupLayout jPanelTopLayout = new javax.swing.GroupLayout(jPanelTop);
        jPanelTop.setLayout(jPanelTopLayout);
        jPanelTopLayout.setHorizontalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTeacher)
                .addContainerGap())
        );
        jPanelTopLayout.setVerticalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTeacher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanelMid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelAddMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAddMouseMoved
        // TODO add your handling code here:
        jLabelAdd.setBackground(new Color(255, 255, 255));
        jLabelAdd.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabelAddMouseMoved

    private void jLabelAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAddMouseClicked
        // TODO add your handling code here:
        if (jIFPerAdd == null) {
            jIFPerAdd = new JIFPerAdd();
            jTablePer.add(jIFPerAdd);
            jIFPerAdd.setBounds(0, 0, jTablePer.getSize().width / 2 + 100, 350);
            jIFPerAdd.setVisible(true);

            if (jIFPerUpdate != null) {
                jIFPerUpdate.setVisible(false);
            }
        }
        jIFPerAdd.setVisible(true);

        if (jIFPerUpdate != null) {
            jIFPerUpdate.setVisible(false);
        }

        //set Location của jIternalFrame ở giữa jTableStudent
        Dimension sizejTableStudent = jTablePer.getSize();
        Dimension sizejInternalFrameAdd = jIFPerAdd.getSize();
        jIFPerAdd.setLocation((sizejTableStudent.width - sizejInternalFrameAdd.width) / 2, (sizejTableStudent.height - sizejInternalFrameAdd.height) / 2);
    }//GEN-LAST:event_jLabelAddMouseClicked

    private void jLabelDeleteMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelDeleteMouseMoved
        // TODO add your handling code here:
        jLabelDelete.setBackground(new Color(255, 255, 255));
        jLabelDelete.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabelDeleteMouseMoved

    private void jLabelDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelDeleteMouseClicked
        // TODO add your handling code here:
        try {
            int position = jTablePer.getSelectedRow();
            if (position >= 0) {
                int yes = JOptionPane.showConfirmDialog(this, "Are you sure want to this permission delete?", "Warning", JOptionPane.YES_NO_OPTION);
                if (yes == JOptionPane.YES_OPTION) {
                    boolean row = permissionDAO.delete(idPermissionDetail());

                    if (row) {
                        JOptionPane.showMessageDialog(this, "Permission Data Deleted!", "Notification", JOptionPane.INFORMATION_MESSAGE);

                        //khi delete thành công thì show data lên bảng
                        fillData();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error Delete Permission!!!", "Warning", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jLabelDeleteMouseClicked

    private void jLabelUpdateMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelUpdateMouseMoved
        // TODO add your handling code here:
        jLabelUpdate.setBackground(new Color(255, 255, 255));
        jLabelUpdate.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabelUpdateMouseMoved

    private void jLabelUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelUpdateMouseClicked
        // TODO add your handling code here:
        if (jIFPerUpdate == null) {
            jIFPerUpdate = new JIFPerUpdate();
            jTablePer.add(jIFPerUpdate);
            jIFPerUpdate.setBounds(0, 0, jTablePer.getSize().width / 2 + 100, 350);
            jIFPerUpdate.setVisible(true);

            if (jIFPerAdd != null) {
                jIFPerAdd.setVisible(false);
            }

            try {
                setData();
            } catch (Exception e) {
            }
        }
        jIFPerUpdate.setVisible(true);

        if (jIFPerAdd != null) {
            jIFPerAdd.setVisible(false);
        }

        //set Location của jIternalFrame ở giữa jTableStudent
        Dimension sizejTableStudent = jTablePer.getSize();
        Dimension sizejInternalFrameU = jIFPerUpdate.getSize();
        jIFPerUpdate.setLocation((sizejTableStudent.width - sizejInternalFrameU.width) / 2, (sizejTableStudent.height - sizejInternalFrameU.height) / 2);
    }//GEN-LAST:event_jLabelUpdateMouseClicked

    private void jTextFieldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusGained
        // TODO add your handling code here:
        if (jTextFieldSearch.getText().equals("Search...")) {
            jTextFieldSearch.setText("");
            jTextFieldSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextFieldSearchFocusGained

    private void jTextFieldSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusLost
        // TODO add your handling code here:
        //nếu jTextField trống thì lại setText thành username
        if (jTextFieldSearch.getText().isEmpty()) {
            jTextFieldSearch.setText("Search...");
            jTextFieldSearch.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextFieldSearchFocusLost

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        // TODO add your handling code here:
        List<Permission> permissions = permissionDAO.search(jTextFieldSearch.getText());

        DefaultTableModel dtm = new DefaultTableModel();

        dtm.addColumn("idPermissionDetail");
        dtm.addColumn("idPermission");
        dtm.addColumn("Permission name");
        dtm.addColumn("Action name");
        dtm.addColumn("Check action");

        for (Permission permission : permissions) {
            Vector<Object> vector = new Vector();
            vector.add(permission.getIdPermissionDetail());
            vector.add(permission.getIdPermission());
            vector.add(permission.getPermissionName());
            vector.add(permission.getActionName());
            vector.add(permission.getCheckActionString());

            dtm.addRow(vector);
        }

        jTablePer.setModel(dtm);

        jTablePer.removeColumn(JPPerManager.jTablePer.getColumnModel().getColumn(1));
        jTablePer.removeColumn(JPPerManager.jTablePer.getColumnModel().getColumn(0));
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jComboBoxSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxSearchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchFocusGained

    private void jComboBoxSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxSearchFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchFocusLost

    private void jLabelRefreshMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRefreshMouseMoved
        // TODO add your handling code here:
        jLabelRefresh.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jLabelRefreshMouseMoved

    private void jLabelRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRefreshMouseClicked
        // TODO add your handling code here:
        fillData();
    }//GEN-LAST:event_jLabelRefreshMouseClicked

    private void jLabelBackMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackMouseMoved
        // TODO add your handling code here:
        jLabelBack.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jLabelBackMouseMoved

    private void jLabelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);

        MainFrame.getjPUserManager().setVisible(true);
    }//GEN-LAST:event_jLabelBackMouseClicked

    private void jPanelMidMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMidMouseMoved
        // TODO add your handling code here:
        jLabelAdd.setBackground(new Color(204, 204, 204));
        jLabelAdd.setForeground(new Color(0, 0, 0));

        jLabelDelete.setBackground(new Color(204, 204, 204));
        jLabelDelete.setForeground(new Color(0, 0, 0));

        jLabelUpdate.setBackground(new Color(204, 204, 204));
        jLabelUpdate.setForeground(new Color(0, 0, 0));

        jLabelBack.setBackground(new Color(204, 204, 204));
        jLabelBack.setForeground(new Color(0, 0, 0));

        jLabelRefresh.setBackground(new Color(204, 204, 204));

        jLabelBack.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_jPanelMidMouseMoved

    private void jTablePerMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePerMouseMoved
        // TODO add your handling code here:
        jLabelAdd.setBackground(new Color(204, 204, 204));
        jLabelAdd.setForeground(new Color(0, 0, 0));

        jLabelDelete.setBackground(new Color(204, 204, 204));
        jLabelDelete.setForeground(new Color(0, 0, 0));

        jLabelUpdate.setBackground(new Color(204, 204, 204));
        jLabelUpdate.setForeground(new Color(0, 0, 0));

        jLabelBack.setBackground(new Color(204, 204, 204));
        jLabelBack.setForeground(new Color(0, 0, 0));

        jLabelRefresh.setBackground(new Color(204, 204, 204));

        jLabelBack.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_jTablePerMouseMoved

    private void jTablePerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePerMouseReleased
        // TODO add your handling code here:
        List<Permission> permissions = permissionDAO.getAll();

        if (permissions.size() > 0) {
            int index = jTablePer.getSelectedRow();
            TableModel model = jTablePer.getModel();

            if (jIFPerUpdate != null) {//tránh lỗi NULLpointerEx do chưa khởi tạo IFAddStudentForm mà đã click vào bảng
                JIFPerUpdate.jTextFieldPerN.setText(model.getValueAt(index, 2).toString());

                String jCheckBoxTextA = JIFPerUpdate.jCheckBoxAdd.getText();
                String jCheckBoxTextUpdate = JIFPerUpdate.jCheckBoxUpdate.getText();
                String jCheckBoxTextDelete = JIFPerUpdate.jCheckBoxDelete.getText();
                String jCheckBoxTextRead = JIFPerUpdate.jCheckBoxRead.getText();
                String jTableActionN = model.getValueAt(index, 3).toString();
                String jTableCheckActioin = model.getValueAt(index, 4).toString();

                JIFPerUpdate.jCheckBoxAdd.setSelected(false);
                JIFPerUpdate.jCheckBoxUpdate.setSelected(false);
                JIFPerUpdate.jCheckBoxDelete.setSelected(false);
                JIFPerUpdate.jCheckBoxRead.setSelected(false);
                if ((jCheckBoxTextA.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxAdd.setSelected(true);
                }
                if ((jCheckBoxTextUpdate.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxUpdate.setSelected(true);
                }
                if ((jCheckBoxTextDelete.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxDelete.setSelected(true);
                }
                if ((jCheckBoxTextRead.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                    JIFPerUpdate.jCheckBoxRead.setSelected(true);
                }
            }
        }
    }//GEN-LAST:event_jTablePerMouseReleased

    private void jTablePerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePerKeyReleased
        // TODO add your handling code here:
        List<Permission> permissions = permissionDAO.getAll();

        //get key up and key down để fill dữ liệu ra form add
        if ((evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN)) {
            if (permissions.size() > 0) {
                int index = jTablePer.getSelectedRow();
                TableModel model = jTablePer.getModel();

                if (jIFPerUpdate != null) {//tránh lỗi NULLpointerEx do chưa khởi tạo IFAddStudentForm mà đã click vào bảng
                    JIFPerUpdate.jTextFieldPerN.setText(model.getValueAt(index, 2).toString());

                    String jCheckBoxTextA = JIFPerUpdate.jCheckBoxAdd.getText();
                    String jCheckBoxTextUpdate = JIFPerUpdate.jCheckBoxUpdate.getText();
                    String jCheckBoxTextDelete = JIFPerUpdate.jCheckBoxDelete.getText();
                    String jCheckBoxTextRead = JIFPerUpdate.jCheckBoxRead.getText();
                    String jTableActionN = model.getValueAt(index, 3).toString();
                    String jTableCheckActioin = model.getValueAt(index, 4).toString();

                    JIFPerUpdate.jCheckBoxAdd.setSelected(false);
                    JIFPerUpdate.jCheckBoxUpdate.setSelected(false);
                    JIFPerUpdate.jCheckBoxDelete.setSelected(false);
                    JIFPerUpdate.jCheckBoxRead.setSelected(false);
                    if ((jCheckBoxTextA.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                        JIFPerUpdate.jCheckBoxAdd.setSelected(true);
                    }
                    if ((jCheckBoxTextUpdate.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                        JIFPerUpdate.jCheckBoxUpdate.setSelected(true);
                    }
                    if ((jCheckBoxTextDelete.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                        JIFPerUpdate.jCheckBoxDelete.setSelected(true);
                    }
                    if ((jCheckBoxTextRead.equals(jTableActionN)) && (jTableCheckActioin.equals("True"))) {
                        JIFPerUpdate.jCheckBoxRead.setSelected(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jTablePerKeyReleased

    private void jPanelTopMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelTopMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelTopMouseMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox<String> jComboBoxSearch;
    private javax.swing.JLabel jLabelAdd;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JLabel jLabelDelete;
    private javax.swing.JLabel jLabelRefresh;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelTeacher;
    private javax.swing.JLabel jLabelUpdate;
    private javax.swing.JPanel jPanelMid;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTablePer;
    public static javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
